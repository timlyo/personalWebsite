!!!5
%head
	= File.read "partials/headerInfo.html"
	%meta{:name => "keywords", :content => "noSearch"}

<script src="https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js"></script>
%link{:type => "text/css", :rel => "stylesheet", :href => "codeStyle.css"}

%body
	%header
		= File.read "partials/navigation.html"

		%div{:class => "jumbotron"}
			%div{:class => "container"}
				%h2 Creating a thread

				%p
					%a{:href => "thread1.html"} Part 1 - Creating a thread
					|
					%a{:href => "threading.html"} Back To List
					|
					%a{:href => "thread2.html"} Part 2 - Threading and member Functions

				%p Creating a thread with a member function takes a bit more work, an entire extra parameter :/

				%pre{:class => "prettyprint"}
					:preserve
						#include &lt;iostream&gt;
						#include &lt;thread&gt;
						#include &lt;vector&gt;

						// class for functions
						class Turtle{
							const std::string name;
						public:
							Turtle(std::string name);
							void sayHello();
						};

						int main(){
							Turtle charles("Charles");
							Turtle mike("Mike");

							//create a thread for charles
							std::thread thread(&Turtle::sayHello, &charles);
							thread.join();

							//create a thread for mike
							std::thread thread2(&Turtle::sayHello, &mike);
							thread2.join();
						}

						//member function definitions
						Turtle::Turtle(std::string name):
							name(name)
						{
						}

						void Turtle::sayHello(){
							std::cout << "Hello my name is " << name << std::endl;
						}

				%p 
